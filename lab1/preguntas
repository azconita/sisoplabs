Pregunta: ¿cuáles son las diferencias entre la syscall execve(2) y la familia de wrappers proporcionados por la librería estándar de C (libc) exec(3)?
Respuesta:
execve es la syscall que permite ejecutar un programa; para llamarla se le deben pasr como parámetros el programa (char* filename), que debe ser un binario ejecutable o un script (comienzan con "#!interpreter"), y recibe también un array de argumentos (char *argv[]) y un array de variables de entorno (char* envp[]). Si se ejecuta exitosamente, execve no retorna nada, pues el programa llamado se ejecutará en su lugar; en cambio, si hubo algún error en su llamada, se retornará -1.
La familia de funciones exec() provistas por la librería estándar de C actúan como "front-ends" de la función execve. En todos los casos se les debe pasar el nombre del programa a ejecutar, con la salvedad de que en algunos casos (execlp, execvp, execvpe) se busca el programa pasado por parámetro dentro de los directorios listados en la variable de entorno PATH. Además, no todos los wrappers admiten el pasaje de variables de entorno (sólo execle y execvpe lo permiten). De igual modo que execve, estas funciones sólo retornan si hubo algún error en la ejecución, y  setean la variable errno.
